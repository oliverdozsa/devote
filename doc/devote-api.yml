openapi: 3.0.0
info:
  version: '1.0.0'
  title: devote
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  description: |
    # DeVote
    This is the API doc of https://github.com/oliverdozsa/devote.
paths:
  '/voting':
    post:
      summary: Creates a new voting
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVotingRequest'
      responses:
        '204':
          description: Successfully created voting.
          headers:
            Location:
              description: The location at which the newly created voting is available.
              type: string
        '400':
          description: The request is not valid.
        '403':
          description: User is not allowed to create the voting (has no vote-caller role).

  '/voting/{id}':
    get:
      summary: Gets a single voting by its ID
      description: PUBLIC and UNLISTED votes are available without authentication. PRIVATE 
        votes are only available to participants and the creator of the voting.
      security:
        - bearerAuth: [ ]
        - none: [ ]
      parameters:
        - name: id
          description: Id of the voting
          in: path
          type: string
          required: true
      responses:
        '200':
          description: Data about the voting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleVotingResponse'

  '/votings/public':
    get:
      summary: Gets public votings

  '/votings/votecaller':
    get:
      summary: Gets votings created by logged in user

  '/votings/voter':
    get:
      summary: Gets votings where logged in user is a voter (participant)

  '/castvote/init':
    post:
      summary: Starts a voting session
      requestBody:

  '/castvote/{votingId}/signEnvelope':
    post:
      summary: Signs the envelope of the voter
      requestBody:

  '/castvote/createAccount':
    post:
      summary: Provides the anonymous voter the vote token by creating an account on the blockchain
      requestBody:

  '/castvote/txOfSignature/{signature}':
    get:
      summary: Gets the transaction string for the given signature (if an account was created before)

  '/castvote/envlSignature/{votingId}':
    get:
      summary: Gets the envelope signature of logged in user for the given voting id (if signed an enveloper before)

  '/encryptoptioncode/{votingId}/{optionCode}':
    get:
      summary: Encrypts an option code for the given voting

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateVotingRequest:
      type: object
      properties:
        network:
          description: Identifier of the blockchain network (should be lowercase)
          type: string
          minLength: 2
          required: true
          example: stellar
        votesCap:
          description: Number of total voters allowed.
          type: integer
          format: int64
          minimum: 2
          required: true
          example: 42
        title:
          description: Title of the voting
          type: string
          minLength: 2
          required: true
          example: General voting about favorite colors
        tokenIdentifier:
          description: Identifer of the (vote) token to be created on the blockchain
          type: string
          pattern: '[0-9a-z]+'
          minLength: 2
          maxLength: 8
          required: false
          example: COLOR01
        encryptedUntil:
          description: If the voting to be encrypted, the date until it should be.
          type: string
          format: date-time
          required: false
          example: 2021-02-24T18:45:28Z
        startDate:
          description: The start date of the voting
          type: string
          format: date-time
          required: true
          example: 2021-02-24T18:45:28Z
        endDate:
          description: The end date of the voting
          type: string
          format: date-time
          required: true
          example: 2021-02-24T18:45:28Z
        authorization:
          description: Determines the authorization method for voters  (currently only emails is supported).
          type: string
          enum: [EMAILS]
          required: false
          example: EMAILS
        authorizationEmailOptions:
          description: List of email addresses who will be participants of the voting
          type: array
          items: 
            type: string
            format: email
          required: false
          example: 
            - alice@mail.com
            - bob@mail.com
        polls:
          description: List of polls (currently one poll is supported)
          type: array
          items:
            $ref: '#/components/schemas/CreatePollRequest'
          minItems: 1
          maxItems: 1
          required: true
        visibility:
          description: Visibility of the poll. UNLISTED is available to anyone who knows the id. PRIVATE is only available to participants and the vote-caller (creator).
          type: string
          enum: [PUBLIC, UNLISTED, PRIVATE]
          required: true
          example: PUBLIC
        fundingAccountPublic:
          description: The public key of the funding account.
          type: string
          required: true
          example: XYZV
        fundingAccountSecret:
          description: The secret (private) key of the funding account.
          type: string
          required: true
          example: CDFG
        useTestnet:
          description: Whether conduct the voting on the testnet of the chosen network.
          type: boolean
          required: false
          example: false

    CreatePollRequest:
      type: object
      properties:
        question:
          description: The question of the poll.
          type: string
          minLength: 2
          required: true
          example: What is your favorite color?
        options:
          type: array
          items:
            $ref: '#/components/schemas/CreatePollOptionRequest'
          minItems: 2
          maxItems: 99
          required: true
          example:
            - name: blue
              code: 1
            - name: red
              code: 2

    CreatePollOptionRequest:
      type: object
      properties:
        name:
          description: An option of the poll.
          type: string
          minLength: 2
          required: true
          example: blue
        code:
          description: The code for the option
          type: integer
          minimum: 1
          required: true
          example: 1

    SingleVotingResponse:
      type: object
      properties:
        id:
          description: Unique identifier of the vote
          type: string
          example: abcdef
        network:
          description: Identifier of the blockchain network
          type: string
          example: stellar
        title:
          description: The title of the voting
          type: string
          example: Voting about colors
        votesCap:
          description: Number of total voters allowed.
          type: integer
          format: int64
          example: 42
        polls:
          description: List of polls (currently one poll is supported)
          type: array
          items:
            $ref: '#/components/schemas/PollResponse'
        createdAt:
          description: Creation time of the voting
          type: string
          format: date-time
          required: false
          example: 2021-02-24T18:45:28Z
        encryptedUntil:
          description: If the voting to be encrypted, the date until it should be.
          type: string
          format: date-time
          required: false
          example: 2021-02-24T18:45:28Z
        decryptionKey:
          description: Used to encrypt decrypted voting result. Available only, if voting encryption was requested, and
            the encrypted until date is expired.
          type: string
          example: pkpkpkrefwceonwon
        startDate:
          description: The start date of the voting
          type: string
          format: date-time
          example: 2021-02-24T18:45:28Z
        endDate:
          description: The end date of the voting
          type: string
          format: date-time
          example: 2021-02-24T18:45:28Z
        distributionAccountId:
          description: Id (public key) of the distribution account
          type: string
          example: xerewrfijije
        ballotAccountId:
          description: Id (public key) of the ballot account
          type: string
          example: ejnfeunnrb
        issuerAccountId:
          description: Id (public key) of the issuer account
          type: string
          example: ejnfeunnrb
        assetCode:
          description: Name of the vote token.
          type: string
          example: COLOR01
        authorization:
          description: Determines the authorization method for voters  (currently only emails is supported).
          type: string
          enum: [ EMAILS ]
          example: EMAILS
        visibility:
          description: Visibility of the poll. UNLISTED is available to anyone who knows the id. PRIVATE is only available to participants and the vote-caller (creator).
          type: string
          enum: [ PUBLIC, UNLISTED, PRIVATE ]
          example: PUBLIC

    PollResponse:
      type: object
      properties:
        question:
          description: The question of the poll.
          type: string
          example: What is your favorite color?
        pollOptions:
          description: Options of the poll
          type: array
            items:
              $ref: '#/components/schemas/PollOptionResponse'

    PollOptionResponse:
      type: object
      properties:





